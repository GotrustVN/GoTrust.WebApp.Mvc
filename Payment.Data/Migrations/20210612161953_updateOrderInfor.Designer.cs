// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Payment.Data.Context;

namespace Payment.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210612161953_updateOrderInfor")]
    partial class updateOrderInfor
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Payment.Data.Entities.Bank", b =>
                {
                    b.Property<string>("bankCode")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("bankLogo")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("bankName")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("bankShortName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2021, 6, 12, 23, 19, 52, 933, DateTimeKind.Local).AddTicks(226));

                    b.Property<string>("createdByusername")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("lastUpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2021, 6, 12, 23, 19, 52, 936, DateTimeKind.Local).AddTicks(3848));

                    b.Property<string>("lastUpdatedByusername")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("bankCode");

                    b.HasIndex("createdByusername");

                    b.HasIndex("lastUpdatedByusername");

                    b.ToTable("Bank");
                });

            modelBuilder.Entity("Payment.Data.Entities.Language", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("code");

                    b.ToTable("Language");

                    b.HasData(
                        new
                        {
                            code = "en",
                            name = "English"
                        },
                        new
                        {
                            code = "vn",
                            name = "Việt Nam"
                        });
                });

            modelBuilder.Entity("Payment.Data.Entities.OrderInfor", b =>
                {
                    b.Property<string>("orderId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(19,9)");

                    b.Property<string>("bankCode")
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2021, 6, 12, 23, 19, 52, 939, DateTimeKind.Local).AddTicks(7972));

                    b.Property<string>("createdByusername")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("lastUpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2021, 6, 12, 23, 19, 52, 939, DateTimeKind.Local).AddTicks(8417));

                    b.Property<string>("lastUpdatedByusername")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("message")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("orderDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("responseCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("statuscode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("transactionNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("typecode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("orderId");

                    b.HasIndex("bankCode");

                    b.HasIndex("createdByusername");

                    b.HasIndex("lastUpdatedByusername");

                    b.HasIndex("statuscode");

                    b.HasIndex("typecode");

                    b.ToTable("OrderInfor");
                });

            modelBuilder.Entity("Payment.Data.Entities.OrderStatus", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2021, 6, 12, 23, 19, 52, 941, DateTimeKind.Local).AddTicks(2802));

                    b.Property<string>("createdByusername")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("lastUpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2021, 6, 12, 23, 19, 52, 941, DateTimeKind.Local).AddTicks(3148));

                    b.Property<string>("lastUpdatedByusername")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("code");

                    b.HasIndex("createdByusername");

                    b.HasIndex("lastUpdatedByusername");

                    b.ToTable("OrderStatus");

                    b.HasData(
                        new
                        {
                            code = "00001",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            lastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            name = "Chưa thanh tóan"
                        },
                        new
                        {
                            code = "00002",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            lastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            name = "Đã thanh tóan"
                        },
                        new
                        {
                            code = "00003",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            lastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            name = "Giao dịch lỗi"
                        });
                });

            modelBuilder.Entity("Payment.Data.Entities.OrderType", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2021, 6, 12, 23, 19, 52, 943, DateTimeKind.Local).AddTicks(5249));

                    b.Property<string>("createdByusername")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("lastUpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2021, 6, 12, 23, 19, 52, 943, DateTimeKind.Local).AddTicks(5893));

                    b.Property<string>("lastUpdatedByusername")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("note")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("shortName")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("code");

                    b.HasIndex("createdByusername");

                    b.HasIndex("lastUpdatedByusername");

                    b.ToTable("OrderType");

                    b.HasData(
                        new
                        {
                            code = "topup",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            lastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            name = "Nạp tiền điện thoại",
                            note = "TEST",
                            shortName = "Nạp tiền điện thoại"
                        },
                        new
                        {
                            code = "billpayment",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            lastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            name = "Thanh toán hóa đơn",
                            note = "TEST",
                            shortName = "Thanh toán hóa đơn"
                        },
                        new
                        {
                            code = "fashion",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            lastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            name = "Thời trang",
                            note = "TEST",
                            shortName = "Thời trang"
                        },
                        new
                        {
                            code = "other",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            lastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            name = "Thanh toán trực tuyến",
                            note = "TEST",
                            shortName = "Thanh toán trực tuyến"
                        });
                });

            modelBuilder.Entity("Payment.Data.Entities.User", b =>
                {
                    b.Property<string>("username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("hashkey")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("password")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("username");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Payment.Data.Entities.Bank", b =>
                {
                    b.HasOne("Payment.Data.Entities.User", "createdBy")
                        .WithMany()
                        .HasForeignKey("createdByusername");

                    b.HasOne("Payment.Data.Entities.User", "lastUpdatedBy")
                        .WithMany()
                        .HasForeignKey("lastUpdatedByusername");

                    b.Navigation("createdBy");

                    b.Navigation("lastUpdatedBy");
                });

            modelBuilder.Entity("Payment.Data.Entities.OrderInfor", b =>
                {
                    b.HasOne("Payment.Data.Entities.Bank", "bank")
                        .WithMany()
                        .HasForeignKey("bankCode");

                    b.HasOne("Payment.Data.Entities.User", "createdBy")
                        .WithMany()
                        .HasForeignKey("createdByusername");

                    b.HasOne("Payment.Data.Entities.User", "lastUpdatedBy")
                        .WithMany()
                        .HasForeignKey("lastUpdatedByusername");

                    b.HasOne("Payment.Data.Entities.OrderStatus", "status")
                        .WithMany()
                        .HasForeignKey("statuscode");

                    b.HasOne("Payment.Data.Entities.OrderType", "type")
                        .WithMany()
                        .HasForeignKey("typecode");

                    b.Navigation("bank");

                    b.Navigation("createdBy");

                    b.Navigation("lastUpdatedBy");

                    b.Navigation("status");

                    b.Navigation("type");
                });

            modelBuilder.Entity("Payment.Data.Entities.OrderStatus", b =>
                {
                    b.HasOne("Payment.Data.Entities.User", "createdBy")
                        .WithMany()
                        .HasForeignKey("createdByusername");

                    b.HasOne("Payment.Data.Entities.User", "lastUpdatedBy")
                        .WithMany()
                        .HasForeignKey("lastUpdatedByusername");

                    b.Navigation("createdBy");

                    b.Navigation("lastUpdatedBy");
                });

            modelBuilder.Entity("Payment.Data.Entities.OrderType", b =>
                {
                    b.HasOne("Payment.Data.Entities.User", "createdBy")
                        .WithMany()
                        .HasForeignKey("createdByusername");

                    b.HasOne("Payment.Data.Entities.User", "lastUpdatedBy")
                        .WithMany()
                        .HasForeignKey("lastUpdatedByusername");

                    b.Navigation("createdBy");

                    b.Navigation("lastUpdatedBy");
                });
#pragma warning restore 612, 618
        }
    }
}
